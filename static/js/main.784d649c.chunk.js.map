{"version":3,"sources":["redux/reducer.js","redux/store.js","redux/types.js","redux/endpoints.js","redux/actions.js","redux/dataTypes.js","components/PeopleList.js","components/SearchBar.js","components/PlanetsList.js","components/StarshipsList.js","components/AppContent.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loading","data","error","store","createStore","state","action","type","payload","applyMiddleware","thunk","API_URL","API_PEOPLE","API_PLANETS","API_STARSHIPS","fetchDataSuccess","fetchDataFailure","fetchData","dataType","searchTerm","dispatch","url","axios","get","then","res","results","catch","err","message","useRowStyles","makeStyles","root","borderBottom","Row","props","row","React","useState","open","setOpen","classes","Fragment","TableRow","className","TableCell","IconButton","aria-label","size","onClick","component","scope","name","align","height","mass","birth_year","gender","homeworld","hair_color","skin_color","eye_color","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","TableBody","films","map","film","key","species","specie","vehicles","vehicle","starships","starship","connect","people","useEffect","CircularProgress","color","TableContainer","Paper","stickyHeader","length","useStyles","theme","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","InputBase","placeholder","inputProps","onChange","e","currentLink","window","location","pathname","target","value","preventDefault","population","diameter","climate","gravity","terrain","rotation_period","orbital_period","surface_water","residents","resident","planets","model","manufacturer","cost_in_credits","crew","passengers","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","drawer","breakpoints","up","flexShrink","appBar","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","windows","useTheme","mobileOpen","setMobileOpen","activeLink","setActiveLink","handleDrawerToggle","List","handleClickLink","text","path","icon","link","index","ListItem","button","Link","to","ListItemIcon","Icon","ListItemText","primary","container","undefined","document","body","CssBaseline","AppBar","position","backgroundColor","Toolbar","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","exact","from","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.784d649c.chunk.js","sourcesContent":["import { FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE } from './types';\n\nconst initialState = {\n    loading: false,\n    data: [],\n    error: ''\n}\n\nexport const reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case FETCH_DATA_REQUEST: return {\n            ...state,\n            loading: true\n        }\n        case FETCH_DATA_SUCCESS: \n            return {\n                loading: false,\n                data: action.payload,\n                error: ''\n            }\n        case FETCH_DATA_FAILURE: return {\n            loading: false,\n            data: [],\n            error: action.payload\n        }\n        default: return state\n    }\n}","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, applyMiddleware(thunk))","export const FETCH_DATA_REQUEST = 'FETCH_DATA_REQUEST'\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS'\nexport const FETCH_DATA_FAILURE = 'FETCH_DATA_FAILURE'","const API_URL = \"https://swapi.dev/api\";\n\nexport const API_PEOPLE = `${API_URL}/people/`;\nexport const API_PLANETS = `${API_URL}/planets/`;\nexport const API_STARSHIPS = `${API_URL}/starships/`;","import { FETCH_DATA_REQUEST, FETCH_DATA_SUCCESS, FETCH_DATA_FAILURE } from './types';\nimport axios from 'axios';\nimport { PEOPLE, PLANETS } from './dataTypes';\nimport { API_PEOPLE, API_PLANETS, API_STARSHIPS } from './endpoints';\n\nexport const fetchDataRequest = () => {\n    return {\n        type: FETCH_DATA_REQUEST\n    }\n}\n\nexport const fetchDataSuccess = data => {\n    return {\n        type: FETCH_DATA_SUCCESS,\n        payload: data\n    }\n}\n\nexport const fetchDataFailure = error => {\n    return {\n        type: FETCH_DATA_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchData = (dataType,searchTerm=\"\") => {\n    return function(dispatch) {\n        const url = dataType === PEOPLE ? API_PEOPLE\n                    : dataType === PLANETS ? API_PLANETS\n                    : API_STARSHIPS\n        dispatch(fetchDataRequest())\n        axios.get(`${url}?search=${searchTerm}`)\n            .then(res => {\n                dispatch(fetchDataSuccess(res.data.results))\n            })\n            .catch(err => {\n                dispatch(fetchDataFailure(err.message))\n            })\n    }\n}","export const PEOPLE = 'PEOPLE'\nexport const PLANETS = 'PLANETS'\nexport const STARSHIPS = 'STARSHIPS'","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { connect } from 'react-redux';\nimport { CircularProgress } from '@material-ui/core';\nimport { PEOPLE } from '../redux/dataTypes';\nimport { fetchData } from '../redux/actions';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.height}</TableCell>\n        <TableCell align=\"right\">{row.mass}</TableCell>\n        <TableCell align=\"right\">{row.birth_year}</TableCell>\n        <TableCell align=\"right\">{row.gender}</TableCell>\n        <TableCell align=\"right\">{row.homeworld}</TableCell>\n        <TableCell align=\"right\">{row.hair_color}</TableCell>\n        <TableCell align=\"right\">{row.skin_color}</TableCell>\n        <TableCell align=\"right\">{row.eye_color}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                More details\n              </Typography>\n              <Table size=\"small\" aria-label=\"details\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell><b>Films</b></TableCell>\n                    <TableCell><b>Species</b></TableCell>\n                    <TableCell><b>Vehicles</b></TableCell>\n                    <TableCell><b>Starhips</b></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.films.map(film=>(\n                        <li key={film}>{film}</li>\n                      ))}\n                    </TableCell>\n                    <TableCell>\n                      {row.species.map(specie=>(\n                        <li key={specie}>{specie}</li>\n                      ))}\n                    </TableCell>\n                    <TableCell>\n                      {row.vehicles.map(vehicle=>(\n                          <li key={vehicle}>{vehicle}</li>\n                      ))}\n                    </TableCell>\n                    <TableCell>\n                      {row.starships.map(starship=>(\n                          <li key={starship}>{starship}</li>\n                      ))}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nfunction PeopleList({ loading, people, error, fetchData }) {\n\n  useEffect(() => {\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\nreturn loading ? <CircularProgress color=\"secondary\" /> : error ? <h2>{ error }</h2> : (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\" stickyHeader>\n        <TableHead className=\"me-table-head\">\n          <TableRow>\n            <TableCell />\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Height</TableCell>\n            <TableCell align=\"right\">Mass</TableCell>\n            <TableCell align=\"right\">Birth year</TableCell>\n            <TableCell align=\"right\">Gender</TableCell>\n            <TableCell align=\"right\">Home world</TableCell>\n            <TableCell align=\"right\">Hair color</TableCell>\n            <TableCell align=\"right\">Skin color</TableCell>\n            <TableCell align=\"right\">Eye color</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            people.length>0 ?\n            people.map((row) => {\n              return (\n              <Row key={row.name} row={row} />\n            )}) :\n            <tr align=\"center\"><td colSpan=\"14\"><em>There is no match for your search</em></td></tr>\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n      people: state.data,\n      loading: state.loading,\n      error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      fetchData: (searchTerm) => dispatch(fetchData(PEOPLE, searchTerm))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (PeopleList)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from 'react-redux';\nimport { PEOPLE, PLANETS, STARSHIPS } from '../redux/dataTypes';\nimport { fetchData } from '../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\n\nfunction SearchBar({ fetchData }) {\n  const classes = useStyles();\n  \n  return (\n    <div style={{display:'flex', paddingBottom:'5px'}}>\n    <Paper component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search here\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n        onChange={(e)=>{\n            const currentLink = window.location.pathname\n            const dataType = currentLink === '/people' ? PEOPLE : currentLink === '/planets' ? PLANETS : STARSHIPS\n            fetchData(dataType, e.target.value)\n        }}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick={(e)=>{e.preventDefault()}}>\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n      </div>\n  );\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      fetchData: (dataType, searchTerm) => dispatch(fetchData(dataType, searchTerm))\n  }\n}\n\nexport default connect(null, mapDispatchToProps) (SearchBar)\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { connect } from 'react-redux';\nimport { CircularProgress } from '@material-ui/core';\nimport { PLANETS } from '../redux/dataTypes';\nimport { fetchData } from '../redux/actions';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.population}</TableCell>\n        <TableCell align=\"right\">{row.diameter}</TableCell>\n        <TableCell align=\"right\">{row.climate}</TableCell>\n        <TableCell align=\"right\">{row.gravity}</TableCell>\n        <TableCell align=\"right\">{row.terrain}</TableCell>\n        <TableCell align=\"right\">{row.rotation_period}</TableCell>\n        <TableCell align=\"right\">{row.orbital_period}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={9}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                More details\n              </Typography>\n              <Table size=\"small\" aria-label=\"details\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell><b>Surface water</b></TableCell>\n                    <TableCell><b>Residents</b></TableCell>\n                    <TableCell><b>Films</b></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.surface_water}\n                    </TableCell>\n                    <TableCell>\n                      {row.residents.map(resident=>(\n                        <li key={resident}>{resident}</li>\n                      ))}\n                    </TableCell>\n                    <TableCell>\n                      {row.films.map(film=>(\n                          <li key={film}>{film}</li>\n                      ))}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nfunction PlanetsList({ loading, planets, error, fetchData }) {\n\n  useEffect(() => {\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n  \nreturn loading ? <CircularProgress color=\"secondary\" /> : error ? <h2>{ error }</h2> : (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\" stickyHeader>\n        <TableHead className=\"me-table-head\">\n          <TableRow>\n            <TableCell />\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Population</TableCell>\n            <TableCell align=\"right\">Diameter</TableCell>\n            <TableCell align=\"right\">Climate</TableCell>\n            <TableCell align=\"right\">Gravity</TableCell>\n            <TableCell align=\"right\">Terrain</TableCell>\n            <TableCell align=\"right\">Rotation period</TableCell>\n            <TableCell align=\"right\">Orbital period</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            planets.length>0 ?\n            planets.map((row) => {\n              return (\n              <Row key={row.name} row={row} />\n            )}) :\n            <tr align=\"center\"><td colSpan=\"8\"><em>There is no match for your search</em></td></tr>\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n      planets: state.data,\n      loading: state.loading,\n      error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      fetchData: (searchTerm) => dispatch(fetchData(PLANETS, searchTerm))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (PlanetsList)","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { connect } from 'react-redux';\nimport { CircularProgress } from '@material-ui/core';\nimport { STARSHIPS } from '../redux/dataTypes';\nimport { fetchData } from '../redux/actions';\n\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset',\n    },\n  },\n});\n\nfunction Row(props) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n\n  return (\n    <React.Fragment>\n      <TableRow className={classes.root}>\n        <TableCell>\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.name}\n        </TableCell>\n        <TableCell align=\"right\">{row.model}</TableCell>\n        <TableCell align=\"right\">{row.manufacturer}</TableCell>\n        <TableCell align=\"right\">{row.cost_in_credits}</TableCell>\n        <TableCell align=\"right\">{row.length}</TableCell>\n        <TableCell align=\"right\">{row.crew}</TableCell>\n        <TableCell align=\"right\">{row.passengers}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={9}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box margin={1}>\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\n                More details\n              </Typography>\n              <Table size=\"small\" aria-label=\"details\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell><b>Cargo capacity</b></TableCell>\n                    <TableCell><b>Consumables</b></TableCell>\n                    <TableCell><b>Hyperdrive rating</b></TableCell>\n                    <TableCell><b>MGLT</b></TableCell>\n                    <TableCell><b>Starship class</b></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  <TableRow>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.cargo_capacity}\n                    </TableCell>\n                    <TableCell>\n                      {row.consumables}\n                    </TableCell>\n                    <TableCell>\n                      {row.hyperdrive_rating}\n                    </TableCell>\n                    <TableCell>\n                      {row.MGLT}\n                    </TableCell>\n                    <TableCell>\n                      {row.starship_class}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n\nfunction StarshipsList({ loading, starships, error, fetchData }) {\n\n  useEffect(() => {\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[])\n\nreturn loading ? <CircularProgress color=\"secondary\" /> : error ? <h2>{ error }</h2> : (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\" stickyHeader>\n        <TableHead className=\"me-table-head\">\n          <TableRow>\n            <TableCell />\n            <TableCell>Name</TableCell>\n            <TableCell align=\"right\">Model</TableCell>\n            <TableCell align=\"right\">Manufacturer</TableCell>\n            <TableCell align=\"right\">Cost &nbsp;(in credits)</TableCell>\n            <TableCell align=\"right\">Length</TableCell>\n            <TableCell align=\"right\">Crew</TableCell>\n            <TableCell align=\"right\">Passengers</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {\n            starships.length>0 ?\n            starships.map((row) => {\n              return (\n              <Row key={row.name} row={row} />\n            )}) :\n            <tr align=\"center\"><td colSpan=\"7\"><em>There is no match for your search</em></td></tr>\n          }\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n      starships: state.data,\n      loading: state.loading,\n      error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      fetchData: (searchTerm) => dispatch(fetchData(STARSHIPS, searchTerm))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (StarshipsList)","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Link, BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './AppContent.css'\nimport PeopleList from './PeopleList';\nimport SearchBar from './SearchBar';\nimport PlanetsList from './PlanetsList';\nimport StarshipsList from './StarshipsList';\nimport { connect } from 'react-redux';\nimport { PEOPLE, PLANETS, STARSHIPS } from '../redux/dataTypes';\nimport { fetchData } from '../redux/actions';\n\n// ================================ DESIGN OPTIONS ==================================\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n// ==================================================================\n\n\n// ================================ FUNCTIONAL COMPONENT ==================================\nfunction AppContent(props) {\n  const { windows } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [activeLink, setActiveLink] = useState(window.location.pathname)\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleClickLink = (currentLink) => {\n    const dataType = currentLink === '/people' ? PEOPLE : currentLink === '/planets' ? PLANETS : STARSHIPS\n    props.fetchData(dataType)\n  };\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <List onClick={(e)=>{\n                        setActiveLink(window.location.pathname)\n                        handleClickLink(window.location.pathname)\n                      }}>\n        {[{text:'People', path: '/people', icon: 'people'}, \n            {text:'Planets', path: '/planets', icon: 'public'},\n            {text:'Starships', path: '/starships', icon: 'flight'}].map((link, index) => (\n            <ListItem button key={index}\n                      component={Link}\n                      to={link.path}\n                      className={activeLink === link.path ? 'drawer-menu-selected' : (link.path === '/people' && activeLink === '/') ? 'drawer-menu-selected' : '' }>\n              <ListItemIcon> <Icon>{link.icon}</Icon> </ListItemIcon>\n              <ListItemText primary={link.text} />\n            </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container = windows !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n    <Router>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor: '#242424'}}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            <strong><span style={{color: 'orange'}}>StarWars-</span> &nbsp;{activeLink === '/people' ? \"People page\" : activeLink === '/' ? \"People page\" : activeLink === '/planets' ?  \"Planets page\" : activeLink === '/starships' ? \"Starships page\" : \"Unknown\" }</strong>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, \n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <SearchBar />\n        <Switch>\n            <Redirect exact from=\"/\" to=\"/people\" />\n            <Route exact path='/people'>\n                <PeopleList />\n            </Route>\n            <Route exact path='/planets'>\n                <PlanetsList />\n            </Route>\n            <Route exact path='/starships'>\n                <StarshipsList />\n            </Route>\n        </Switch>\n      </main>\n      </Router>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      fetchData: (dataType) => dispatch(fetchData(dataType))\n  }\n}\n\nexport default connect(null, mapDispatchToProps) (AppContent);\n","import React from 'react';\nimport './redux/store';\nimport AppContent from './components/AppContent';\n\nfunction App() {\n  return (\n    <div>\n      <AppContent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}